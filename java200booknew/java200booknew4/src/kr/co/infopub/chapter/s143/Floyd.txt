01: package kr.co.infopub.chapter.s128;
02: public class Floyd{
03:     private int[][]data;
04:     private int[][]p;
05:     public String[] name;
06:     public Floyd(){
07:         Init();        
08:     }
09:     public void Init(){
10:         //p1~p5 경로, 1000 충분히 큰 수
11:         data = new int[][] { { 0,2,3,1000,7},
12:                             {5,0,1000,1000,4 },
13:                             {2,1000,0,6,1000 }, 
14:                             {1000,1000,3,0,4}, 
15:                             {6,1,6,2,0 } };
16:         p = new int[data.length][data.length];
17:         name=new String[]{"P1","P2","P3","P4","P5"};
18:     }
19:     //Floyd 알고리즘을 이용하여 최단경로의 
20:     //비용과 함께 최단경로를 구하는 함수
21:     public void distance(){
22:         for (int i = 0; i < data.length; i++){
23:             for (int j = 0; j < data.length; j++){
24:                 p[i][ j] = -1;
25:             }
26:         }
27:         for (int k = 0; k < data.length; k++) {
28:             for (int i = 0; i < data.length; i++){
29:                 for (int j = 0; j < data.length; j++){
30:                     if (data[i][ j] > data[i][ k] + data[k][ j]){
31:                         p[i][ j] = k;
32:                         data[i][ j] = data[i][ k] + data[k][ j];
33:                     }
34:                 }
35:             }
36:         }
37:     }//
38:     //최단경로 중간 경유지 출력,q출발지,r도착지
39:     public void Path(int q, int r){
40:         if (p[q][r] != -1) {
41:             Path(q, p[q][ r]);
42:             System.out.printf("%s -> ", name[p[q][r]]);
43:             Path(p[q][r], r);
44:         }
45:     }
46:     //모든 경로를 출력 해주는 함수
47:     public void printPath(){
48:         int count = data.length;
49:         for (int i = 0; i < count; i++){
50:             for (int j = 0; j < count; j++){
51:                 System.out.printf("%d\t", data[i][j]);
52:             }
53:             System.out.println();
54:         }
55:     }//
56:     public static void main(String[] args) {
57:     	 Floyd floy = new Floyd();
58:          floy.printPath();
59:          System.out.println("-----------------------");
60:          floy.distance();
61:          floy.printPath();
62:          int start = 0;//1
63:          int goal = 4;//P5
64:          System.out.printf("%s -> ", floy.name[start]);
65:          floy.Path(start, goal);
66:          System.out.printf("%s", floy.name[goal]);
67:          System.out.println();
68: 	}
69: }//class Floyd
