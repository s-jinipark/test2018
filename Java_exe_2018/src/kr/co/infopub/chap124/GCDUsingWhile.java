package kr.co.infopub.chap124;
public class  GCDUsingWhile
{
  //최대 공약수 값
  public  int gcd(int m,int n){
	  int temp=0;
	  while(m!=n){
		  if(m>n)m-=n;
		  else if(n>m)n-=m;
	  }
	  return m;
  }
  //최소 공배수 값
  public  int lcm(int m,int n){
	  return (m*n)/gcd(m,n);
  }
	/*
	최대공약수(G) 와 최소공배수(L) 구하는 원리
	G : 공통 약수 중 가장 큰 수
	L : 공통 배수 중 가장 작은 수
	
	15 의 약수는 [1,3,5,15]
	80 의 약수는 [1,2,4,5,8,10,16,20,40,80] 이다
	15 와 80 의 공통약수는 [1,5] 이고 5 가 가장 크다
	
	15 의 배수는 [15,30,45, ..., 240, 255, ... ] 이고
	80 의 배수는 [80, 160, 240, ... ] 이다
	공통 배수는 [240, 480, ...] 이며 최소 는 240
	
	유클리드 호제법
	두수를 입력하여 서로 같게 될 때까지 큰수에서 작은수를 뺀다
	(15,80) -> (15,65) -> (15,50) -> ... (5, 5) : 최대공약수는 5
	최소공배수는 두 수의 곱을 최대공약수로 나누면 된다
	*/  
}
